<Application x:Class="Mija_Reader.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:core="clr-namespace:Mija_Reader.Core"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <core:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <core:ToLowerValueConverter x:Key="ToLowerValueConverter"/>
        <core:StringToImageSourceValueConverter x:Key="StringToImageSourceValueConverter"/>
        <core:MangaStatusToStringValueConverter x:Key="MangaStatusToStringValueConverter"/>
        <core:MangaTypeToStringValueConverter x:Key="MangaTypeToStringValueConverter"/>
        <!--  Button style -->
        <Style TargetType="{x:Type Button}" x:Key="WindowButtonStyle">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                        <Border
        					x:Name="Chrome"
        					BorderBrush="{TemplateBinding BorderBrush}"
        					BorderThickness="1"
        					Margin="0"
        					Background="{TemplateBinding Background}"
        					SnapsToDevicePixels="True"
        					CornerRadius="2">
                            <ContentPresenter
        						ContentTemplate="{TemplateBinding ContentTemplate}"
        						Content="{TemplateBinding Content}"
        						ContentStringFormat="{TemplateBinding ContentStringFormat}"
        						HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
        						Margin="{TemplateBinding Padding}"
                                
        						RecognizesAccessKey="True"
        						SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
        						VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="FontFamily" Value="Webdings"/>
            <Setter Property="FontSize" Value="13.333" />
            <Setter Property="Foreground" Value="Silver" />
            <Setter Property="Margin" Value="0,2,3,0"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="Gray" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="OpacityMask" Value="#AA888888"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!-- scroolbars -->
        <SolidColorBrush x:Key="BackgroundNormal" Color="WhiteSmoke"/>
        <SolidColorBrush x:Key="BorderBrushNormal" Color="Gray"/>
        <SolidColorBrush x:Key="BackgroundHighlighted" Color="LightCyan"/>
        <SolidColorBrush x:Key="BorderBrushHighlighted" Color="#6A6A75"/>
        <SolidColorBrush x:Key="BackgroundSelected" Color="#007ACC"/>
        <SolidColorBrush x:Key="BorderBrushSelected" Color="#1C97EA"/>
        <SolidColorBrush x:Key="ScrollBarPageButtonBackgroundHighlighted" Color="#05FFFFFF"/>
        <SolidColorBrush x:Key="Foreground" Color="Black"/>
        <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Background" Value="{StaticResource BackgroundNormal}"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderBrushNormal}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1">
                            <Path HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{StaticResource Foreground}" 
                              Data="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource BackgroundHighlighted}"/>
                                <Setter Property="BorderBrush" Value="{StaticResource BorderBrushHighlighted}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" Value="{StaticResource BackgroundSelected}" />
                                <Setter Property="BorderBrush" Value="{StaticResource BorderBrushSelected}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="{TemplateBinding Background}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource ScrollBarPageButtonBackgroundHighlighted}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Background" Value="{StaticResource BackgroundNormal}"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderBrushNormal}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" />
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource BackgroundHighlighted}"/>
                                <Setter Property="BorderBrush" Value="{StaticResource BorderBrushHighlighted}"/>
                            </Trigger>
                            <Trigger Property="IsDragging" Value="True">
                                <Setter Property="Background" Value="{StaticResource BackgroundSelected}"/>
                                <Setter Property="BorderBrush" Value="{StaticResource BorderBrushSelected}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="18"/>
                    <RowDefinition/>
                    <RowDefinition Height="18"/>
                </Grid.RowDefinitions>
                <RepeatButton Grid.Row="0" Style="{StaticResource ScrollBarLineButton}" Content="M 0 4 L 8 4 L 4 0 Z" Command="ScrollBar.LineUpCommand"/>
                <Track Name="PART_Track"
                Grid.Row="1"
                IsDirectionReversed="true">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageUpCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumb}"/>
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageDownCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton Grid.Row="2" Style="{StaticResource ScrollBarLineButton}" Command="ScrollBar.LineDownCommand" Content="M 0 0 L 4 4 L 8 0 Z"/>
            </Grid>
        </ControlTemplate>
        <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="18"/>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="18"/>
                </Grid.ColumnDefinitions>
                <RepeatButton Grid.Column="0" Style="{StaticResource ScrollBarLineButton}" Content="M 0 4 L 4 8 L 4 0 Z" Command="ScrollBar.LineLeftCommand"/>
                <Track Name="PART_Track"
                Grid.Column="1"
                IsDirectionReversed="false">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageLeftCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumb}"/>
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageRightCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton Grid.Column="2" Style="{StaticResource ScrollBarLineButton}" Content="M 4 4 L 0 8 L 0 0 Z" Command="ScrollBar.LineRightCommand"/>
            </Grid>
        </ControlTemplate>
        <Style x:Key="StandardScrollBar" TargetType="{x:Type ScrollBar}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Width" Value="18"/>
                    <Setter Property="Height" Value="Auto" />
                    <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
                </Trigger>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Height" Value="18"/>
                    <Setter Property="Width" Value="Auto" />
                    <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <!-- Separator -->
        <Style TargetType="{x:Type Separator}"
           x:Key="SeparatorStyle">
            <Setter Property="Height"
                Value="1" />
            <Setter Property="Background"
                Value="#0f3c5a" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Separator}">
                        <Rectangle Height="{TemplateBinding Height}"
                               Fill="White" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ContextMenu x:Key="VScrollBarContextMenu" x:Shared="true">
            <MenuItem Header="{Binding SelectedLanguage.ScroolBar_ScroolHere}" Command="ScrollBar.ScrollHereCommand" CommandTarget="{Binding Path=PlacementTarget, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}"/>
            <Separator/>
            <MenuItem Header="{Binding SelectedLanguage.ScroolBar_Top}" Command="ScrollBar.ScrollToTopCommand" CommandTarget="{Binding Path=PlacementTarget, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}" />
            <MenuItem Header="{Binding SelectedLanguage.ScroolBar_Bottom}" Command="ScrollBar.ScrollToBottomCommand" CommandTarget="{Binding Path=PlacementTarget, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}" />
            <Separator/>
            <MenuItem Header="{Binding SelectedLanguage.ScroolBar_PageUp}" Command="ScrollBar.PageUpCommand" CommandTarget="{Binding Path=PlacementTarget, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}" />
            <MenuItem Header="{Binding SelectedLanguage.ScroolBar_PageDown}" Command="ScrollBar.PageDownCommand" CommandTarget="{Binding Path=PlacementTarget, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}" />
            <Separator/>
            <MenuItem Header="{Binding SelectedLanguage.ScroolBar_ScroolUp}" Command="ScrollBar.LineUpCommand" CommandTarget="{Binding Path=PlacementTarget, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}" />
            <MenuItem Header="{Binding SelectedLanguage.ScroolBar_ScroolDown}" Command="ScrollBar.LineDownCommand" CommandTarget="{Binding Path=PlacementTarget, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}" />
        </ContextMenu>
        <ContextMenu x:Key="HScrollBarContextMenu" x:Shared="true">
            <MenuItem Header="{Binding SelectedLanguage.ScroolBar_ScroolHere}" Command="ScrollBar.ScrollHereCommand" CommandTarget="{Binding Path=PlacementTarget, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}"/>
            <Separator/>
            <MenuItem Header="{Binding SelectedLanguage.ScroolBar_LeftEdge}" Command="ScrollBar.ScrollToLeftEndCommand" CommandTarget="{Binding Path=PlacementTarget, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}" />
            <MenuItem Header="{Binding SelectedLanguage.ScroolBar_RightEdge}" Command="ScrollBar.ScrollToRightEndCommand" CommandTarget="{Binding Path=PlacementTarget, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}" />
            <Separator/>
            <MenuItem Header="{Binding SelectedLanguage.ScroolBar_PageLeft}" Command="ScrollBar.PageLeftCommand" CommandTarget="{Binding Path=PlacementTarget, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}" />
            <MenuItem Header="{Binding SelectedLanguage.ScroolBar_PageRight}" Command="ScrollBar.PageRightCommand" CommandTarget="{Binding Path=PlacementTarget, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}" />
            <Separator/>
            <MenuItem Header="{Binding SelectedLanguage.ScroolBar_ScroolLeft}" Command="ScrollBar.LineLeftCommand" CommandTarget="{Binding Path=PlacementTarget, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}" />
            <MenuItem Header="{Binding SelectedLanguage.ScroolBar_ScroolRight}" Command="ScrollBar.LineRightCommand" CommandTarget="{Binding Path=PlacementTarget, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}" />
        </ContextMenu>
        <Style TargetType="{x:Type Label}" x:Key="HeaderLabelStyle">
            <Setter Property="FontSize" Value="24" />
            <Setter Property="FontWeight" Value="Normal" />
            <Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
            <Setter Property="Foreground" Value="{DynamicResource GrayBrush3}" />
        </Style>
        <Style x:Key="ModalDialogStyle" TargetType="{x:Type Window}">
            <Setter Property="WindowStyle" Value="None" />
            <Setter Property="ResizeMode" Value="NoResize" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="ShowInTaskbar" Value="False" />
            <Setter Property="Foreground">
                <Setter.Value>
                    <SolidColorBrush Color="{DynamicResource BlackColor}"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Background">
                <Setter.Value>
                    <SolidColorBrush Color="{DynamicResource WhiteColor}"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Template" Value="{DynamicResource ModalTemplateKey}" />
        </Style>
        <ControlTemplate x:Key="ModalTemplateKey" TargetType="{x:Type Window}">
            <Border x:Name="PART_Border" BorderBrush="{DynamicResource GrayBrush3}" BorderThickness="0,3,0,3" Background="{TemplateBinding Background}">
                <Grid>
                    <AdornerDecorator>
                        <ContentPresenter />
                    </AdornerDecorator>
                </Grid>
            </Border>
        </ControlTemplate>
    </Application.Resources>
</Application>
